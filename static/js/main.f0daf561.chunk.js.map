{"version":3,"sources":["assets/MajoSoberanes.gif","components/navbar/Navbar.js","components/foto/Foto.js","components/hola/Hola.js","components/proyectos/Proyectos.js","components/background/Background.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","href","Foto","src","foto","alt","width","Hola","foto_Foto","id","Proyectos","Background","App","navbar_Navbar","background_Background","hola_Hola","proyectos_Proyectos","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0UCmBzBC,eAhBA,kBACbC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBC,KAAK,QAApC,cAEFJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWC,KAAK,aAA7B,cAEFJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWC,KAAK,eAA7B,gBAEFJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWC,KAAK,YAA7B,wCCNSC,SALF,kBACXL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKI,IAAKC,IAAMC,IAAI,iBAAiBC,MAAO,YCgBjCC,EAlBF,kBACXV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,WAASC,UAAU,0CACjBH,EAAAC,EAAAC,cAACS,EAAD,OAEFX,EAAAC,EAAAC,cAAA,WAASC,UAAU,0CACjBH,EAAAC,EAAAC,cAAA,MAAIU,GAAG,MAAP,aACAZ,EAAAC,EAAAC,cAAA,yNAGAF,EAAAC,EAAAC,cAAA,6PCPOW,SALG,kBAChBb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIU,GAAG,YAAP,gBCMWE,SARI,kBACjBd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,kBACAH,EAAAC,EAAAC,cAAA,qCCaSa,mLAXX,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAACiB,EAAD,cAPUC,aCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3B,EAAAC,EAAAC,cAAC0B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f0daf561.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MajoSoberanes.2463c506.gif\";","import React from 'react';\nimport './navbar.css';\n\nconst Navbar = () =>\n  <ul className=\"nav justify-content-center\">\n    <li className=\"nav-item\">\n      <a className=\"nav-link active\" href=\"Hola\">¡Hola!</a>\n    </li>\n    <li className=\"nav-item\">\n      <a className=\"nav-link\" href=\"Proyectos\">Proyectos</a>\n    </li>\n    <li className=\"nav-item\">\n      <a className=\"nav-link\" href=\"Habilidades\">Habilidades</a>\n    </li>\n    <li className=\"nav-item\">\n      <a className=\"nav-link\" href=\"Contacto\">Contacto</a>\n    </li>\n  </ul>\n\nexport default Navbar;","import React from 'react';\nimport foto from '../../assets/MajoSoberanes.gif'\nimport './foto.css';\n\nconst Foto = () =>\n  <div className=\"majo-foto\">\n    <img src={foto} alt=\"Majo Soberanes\" width= \"100%\"/>\n  </div>\n\nexport default Foto;","import React from 'react';\nimport './hola.css';\nimport Foto from '../foto/Foto';\n\nconst Hola = () =>\n  <div className=\"container\">\n    <div className=\"row\">\n      <section className=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n        <Foto/>\n      </section>\n      <section className=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n        <h1 id=\"hi\">¡Hola!</h1>\n        <p>\n        Soy una desarrolladora web que disfruta de crear a través de la tecnología. Entusiasta del autoaprendizaje y fanática del machine learning. Amante de la pizza, los robots y la ciencia ficción.\n        </p>\n        <p>\n        Me gusta el trabajo en equipo porque me permite aprender a través de personas con diversos perfiles. Practico la metodología ágil y considero la comunicación eficaz lo más importante para la realización de un proyecto.\n        </p>\n      </section>\n    </div>\n  </div>\n\nexport default Hola;","import React from 'react';\nimport './proyectos.css';\n\nconst Proyectos = () =>\n  <div>\n    <h1 id=\"projects\">Proyectos</h1>\n  </div>\n\nexport default Proyectos;","import React from 'react';\nimport './background.css';\n\nconst Background = () =>\n  <div className=\"container-fluid stars\">\n    <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-6\">\n      <h1 className=\"text-center\">Majo Soberanes</h1>\n      <h3>Front End Developer</h3>\n    </div>\n  </div>\n\nexport default Background;","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/navbar/Navbar';\nimport Hola from './components/hola/Hola';\nimport Proyectos from './components/proyectos/Proyectos';\nimport Background from './components/background/Background';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Navbar/>\n        <Background/>\n        <Hola/>\n        <Proyectos/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}